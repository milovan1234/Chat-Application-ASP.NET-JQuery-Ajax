@model MyWebChat.ViewModels.NewRandomViewModel
@{
    ViewBag.Title = "Chat Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int id = Convert.ToInt32(Session["Id"]);
    int userToId = @Model.Message.UserToId;
}

<div class="container">
    <div class="form-comunications col-12 col-sm-10 col-md-6 col-lg-5 my-5">
        <div class="row bg-light">
            <div class="col-12 px-0 border border-info w-100 text-left">
                <div class="p-1">
                    <img class="img-responsive user-comunications" src="@Model.Message.UserTo.ImagePath" />
                    <h6 class="font-weight-bold text-dark d-inline ml-2 chat-header">
                        @Model.Message.UserTo.FirstName @Model.Message.UserTo.LastName -
                    </h6>
                    <small class="chat-header-s"><span>Last seen: <span class="text-info font-weight-bold last-login"></span></span></small>

                    <i class="fas fa-ellipsis-v text-dark float-right drop m-2 three-dots" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></i>
                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton">
                        <a class="dropdown-item" href="~/Chat/ViewUserProfile?userToId=@Model.Message.UserToId">View Profile</a>
                    </div>
                </div>
            </div>
            <div class="col-12 px-0 bg-chat">
                <div class="border border-info w-100 text-left chat-box text-dark">
                    <ul class="list-unstyled messages text-dark">
                        @if (Model.Message != null)
                        {
                            foreach (var message in Model.UserMessages)
                            {
                                if (message.UserFromId == id)
                                {
                                    <li class="text-right my-1">
                                        <p class="py-2 pl-3 pr-2 bg-light text-dark message-text d-inline-block">@message.MessageText<br /><sub class="text-info font-weight-bold time-send m-0"></sub></p>
                                        <img class="img-message mx-2" src="@message.UserFrom.ImagePath" />
                                    </li>
                                }
                                else
                                {
                                    <li class="my-1">
                                        <img class="img-message mx-2" src="@message.UserFrom.ImagePath" />
                                        <p class="py-2 pr-3 pl-2 bg-light text-dark message-text d-inline-block">
                                            @message.MessageText
                                            <br /><sub class="text-info font-weight-bold time-send m-0"></sub>
                                        </p>
                                    </li>
                                }
                            }
                        }
                    </ul>
                </div>
            </div>
            <div class="col-12 px-0 border border-info">
                <div class="input-group">
                    <input type="text" maxlength="100" placeholder="Your message..." id="Message" class="form-control your-messages py-2" />
                    <span class="input-group-btn">
                        <button class="btn btn-success send-message px-3 px-sm-5 py-2" type="button"><img class="img-send-messages" src="~/Images/send-messages.png" /></button>
                    </span>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts
{
    <script>
        $(document).ready(function () {
            function parseJsonDate(jsonDateString) {
                return new Date(parseInt(jsonDateString.replace('/Date(', '')));
            }

            function loadActiveUsers() {
                let url = "@Url.Content("~/")" + "User/NonActiveUsers";
                let date;
                $.getJSON(url, function (data) {
                    let check = false;
                    $.each(data, function (i, row) {
                        if (row.Id == @userToId) {
                            let date = parseJsonDate(row.LastLogin);
                            let hr = date.getHours();
                            let min = date.getMinutes();
                            if (min < 10) {
                                min = "0" + min;
                            }
                            if (hr < 10) {
                                hr = "0" + hr;
                            }
                            $(".last-login").html(hr + ":" + min);
                            check = true;
                        }
                    });
                    if(!check) {
                        $(".last-login").html("Active");
                    }
                });
            }
            loadActiveUsers();

            function sendMessage() {
                let firstNameFrom = '@Model.Message.UserFrom.FirstName.ToString()';
                let messages = $(".your-messages");
                if ($(messages).val() != "") {
                    $.ajax({
                        url: "SendMessage/",
                        method: "POST",
                        data: {
                            UserFromId: @Model.Message.UserFromId,
                            UserToId: @Model.Message.UserToId,
                            MessageText: $(messages).val()
                        },
                        success: function () {
                            $(".messages").append("<li class='text-right my-1'> <p class='py-2 pl-3 pr-2 bg-light text-dark message-text d-inline-block'>" + $(messages).val() + " <br /><sub class='m-0 text-info font-weight-bold time-send'>" +'@DateTime.Now.ToString("HH:mm")'+ "</sub></p> <img class='img-message mx-2' src='" + '@Model.Message.UserFrom.ImagePath' + "'/></li>");
                            $(messages).val("");
                        }
                    });
                }
            }
            let sendMess = $(".send-message");
            $(sendMess).click(function () {
                sendMessage();
            });
            $(sendMessage).keyup(function (event) {
                if (event.which == 13) {
                    event.preventDefault();
                    sendMessage();
                }
            });

            let fileName = '@Model.Filename';
            let userToId = '@Model.Message.UserToId';
            function loadMessages() {
                fileName = '@Model.Filename';
                let url = "@Url.Content("~/")" + "Chat/GetMessages";
                $.getJSON(url, { fileName: fileName, userToId: userToId }, function (data) {
                    items = "";
                    $(".messages").empty();
                    $.each(data, function (i, row) {
                        let date = parseJsonDate(row.DateTimeSend);
                        let hr = date.getHours();
                        let min = date.getMinutes();
                        if (min < 10) {
                            min = "0" + min;
                        }
                        if (hr < 10) {
                            hr = "0" + hr;
                        }
                        if (row.UserFromId == @id) {
                            items += "<li class='text-right my-1'> <p class='py-2 pl-3 pr-2 bg-light text-dark message-text d-inline-block'>" + row.MessageText + " <br /><sub class='m-0 text-info font-weight-bold time-send'>" + hr + ":" + min + "</sub></p> <img class='img-message mx-2' src='" + row.UserFrom.ImagePath + "'/></li>"
                        } else {
                            items += "<li class='my-1'><img class='img-message mx-2' src=" + row.UserFrom.ImagePath + " />&nbsp;<p class='py-2 pr-3 pl-2 bg-light text-dark message-text d-inline-block'>" + row.MessageText + "<br /><sub class='m-0 text-info font-weight-bold time-send'>" + hr + ":" + min + "</sub></p></li>"
                        }
                    });
                    $(".messages").append(items);
                });
            }
            loadMessages();

            setInterval(function () {
                loadMessages();
                loadActiveUsers();
            }, 1000);
        });
    </script>
}